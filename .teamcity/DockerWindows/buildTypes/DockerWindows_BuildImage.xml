<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="45251d94-2894-4c81-a661-65f4ae546403" xsi:noNamespaceSchemaLocation="http://www.jetbrains.com/teamcity/schemas/10.0/project-config.xsd">
  <name>BuildImage</name>
  <description />
  <settings>
    <options>
      <option name="checkoutDirectory" value="dockerbuild" />
      <option name="cleanBuild" value="true" />
    </options>
    <parameters>
      <param name="passworddocker" value="zxx041d7762d731da63" spec="password display='normal'" />
      <param name="userdocker" value="guibizet" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_13" name="" type="jetbrains_powershell">
        <parameters>
          <param name="jetbrains_powershell_bitness" value="x64" />
          <param name="jetbrains_powershell_execution" value="STDIN" />
          <param name="jetbrains_powershell_noprofile" value="true" />
          <param name="jetbrains_powershell_script_code"><![CDATA[echo "\e[31mHello \e[0m"
echo "\0x1B[31mHello \0x1B[0m"
cd docker
cd output
echo "*****************************************"
echo "*****************************************"
echo "We build and tag"
echo "docker build -t guibizet/%dep.DockerWindows_LogsOfTheContainer.env.nameofbuild%:1.%build.counter% ."
echo "*****************************************"
echo "*****************************************"


docker build -t guibizet/%dep.DockerWindows_LogsOfTheContainer.env.nameofbuild%:1.%build.counter% .


echo "*****************************************"
echo "*****************************************"
echo "deletion of the stopped container used for build the sln"
echo "docker rm -fv %dep.DockerWindows_LogsOfTheContainer.env.nameofbuild%"
echo "*****************************************"
echo "*****************************************"


docker rm -fv %dep.DockerWindows_LogsOfTheContainer.env.nameofbuild%

echo "*****************************************"
echo "*****************************************"
echo "Run the new image "
echo "docker run -d --name %dep.DockerWindows_LogsOfTheContainer.env.nameofbuild% -p 80:80 guibizet/%dep.DockerWindows_LogsOfTheContainer.env.nameofbuild%:1.%build.counter% powershell"
echo "*****************************************"
echo "*****************************************"

docker run -d --name %dep.DockerWindows_LogsOfTheContainer.env.nameofbuild% -p 80:80 guibizet/%dep.DockerWindows_LogsOfTheContainer.env.nameofbuild%:1.%build.counter% powershell

echo "*****************************************"
echo "*****************************************"
echo "Login and push"

echo "docker login -u %userdocker% -p %passworddocker%"
echo  "docker push guibizet/%dep.DockerWindows_LogsOfTheContainer.env.nameofbuild%:1.%build.counter%"

echo "*****************************************"
echo "*****************************************"
docker login -u %userdocker% -p %passworddocker%
docker push guibizet/%dep.DockerWindows_LogsOfTheContainer.env.nameofbuild%:1.%build.counter%]]></param>
          <param name="jetbrains_powershell_script_mode" value="CODE" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings />
    <requirements />
    <build-triggers>
      <build-trigger id="vcsTrigger" type="vcsTrigger">
        <parameters>
          <param name="branchFilter" value="+:*" />
          <param name="quietPeriodMode" value="DO_NOT_USE" />
        </parameters>
      </build-trigger>
      <build-trigger id="TRIGGER_1" type="buildDependencyTrigger">
        <parameters>
          <param name="afterSuccessfulBuildOnly" value="true" />
          <param name="dependsOn" value="DockerWindows_LogsOfTheContainer" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <artifact-dependencies>
      <dependency id="ARTIFACT_DEPENDENCY_1" sourceBuildTypeId="DockerWindows_LogsOfTheContainer" cleanDestination="false">
        <revisionRule name="lastSuccessful" revision="latest.lastSuccessful" />
        <artifact sourcePath="** =&gt; docker" />
      </dependency>
    </artifact-dependencies>
    <cleanup />
  </settings>
</build-type>

